True
True
False
False
True
True
True
True
True
Laboratory Technician
Sales
Divorced
Life Sciences
Travel_Frequently
Male
3
Marketing
35.65
6
25
3183.0
241
19.5
8
8
8
[3, 4]
[2028, 2090, 2426, 2661, 2670]
[2, 1, 4, 3]
[23, 22, 21, 20, 17]
[38, 32, 29, 36, 22]
['Laboratory Technician', 'Research Scientist', 'Manufacturing Director']
['Research & Development', 'Sales']
['Single', 'Married', 'Divorced']
['Life Sciences', 'Other', 'Medical']
['Travel_Rarely', 'Travel_Frequently', 'Non-Travel']
['Yes', 'No']
[1, 2, 3, 4]
[1, 2, 3]
__CODE_ERROR__: invalid syntax (<string>, line 0) in respones  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Does the dataset contain any review that more than forty users have labeled as helpful?
True
__CODE_ERROR__: string indices must be integers, not 'str' in respones df['ratings'].apply(lambda x: x['overall']).value_counts().idxmin()  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Is 1 the least frequent overall rating given in a review?
__CODE_ERROR__: 'str' object has no attribute 'get' in respones df[df.apply(lambda x: x['ratings'].get('location', None) is not None, axis=1)].shape[0]  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: How many reviews give ratings related to the location?
__CODE_ERROR__: 'ratings' in respones df.apply(lambda row: len(row['ratings']) if 'overall' in row['ratings'] else 0).sum() > df.apply(lambda row: len(row['ratings']) if 'location' in row['ratings'] else 0).sum() for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Is there more overall ratings given than ratings related to the location?
__CODE_ERROR__: invalid syntax (<string>, line 0) in respones  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Is there any review written in 2024?
False
__CODE_ERROR__: True in respones df.via_mobile.value_counts()[True] > df.via_mobile.value_counts()[False]  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Are there more reviews marked as being made from a phone than not?
True
__CODE_ERROR__: string indices must be integers, not 'str' in respones df.loc[df['ratings'].apply(lambda x: x['rooms'] == 5.0)].shape[0] > 15   for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: Is the best possible review for room ratings found in more than fifteen reviews?
2012
__CODE_ERROR__: string indices must be integers, not 'str' in respones df['ratings'].apply(lambda x: x['rooms']).mean()  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: What is the average rating given to rooms?
__CODE_ERROR__: Expecting property name enclosed in double quotes: line 1 column 2 (char 1) in respones df['ratings'].apply(lambda x: json.loads(x)['rooms']).value_counts().idxmax()  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: What (non-null) room rating is most common?
0
{'username': 'charlietrisj', 'num_cities': 9, 'num_helpful_votes': 2, 'num_reviews': 18, 'num_type_reviews': 7, 'id': 'E9E6CF57EF6DEFB14DBE13D71943545C', 'location': 'chatham, massachusetts'}
1240.3
20
5
0.8
5463
2004
0
16
[2012, 2010, 2011, 2009]
[5, 3, 2, 2, 1]
[]
[]
[1164645, 643970, 281828, 262330, 258705]
__CODE_ERROR__: invalid syntax (<string>, line 0) in respones  for answer Wrong Code, #### Columns are: ['ratings', 'title', 'text', 'author', 'date_stayed', 'offering_id', 'num_helpful_votes', 'date', 'id', 'via_mobile'], ### question is: List the 4 most common years a guest stayed at a property.
False
[False, False, True, True, False, False, False, False, False]
False
False
True
True
False
Request for Quotations
Western and Central Africa
Micronesia, Federated States of
Consultant Services
Eastern and Southern Africa
Burkina Faso
Energy and Extractives;Agriculture, Fishing and Forestry;Industry, Trade and Services
800433.3
3
20
164490.6105
477763.0
224496.80638662673
13
[800433.3, 716716.34, 369866.76]
True
18
[2024, 2025, 2023]
[13222.93, 2685156.49, 591432.79]
[157840.9, 166464.39]
[716716.34, 369866.76, 198952.48, 189088.46]
['Burkina Faso', 'Nigeria', 'Niger', 'Ethiopia', 'Somalia']
['Western and Central Africa', 'Eastern and Southern Africa', 'EAST ASIA AND PACIFIC', 'LATIN AMERICA AND CARIBBEAN']
['Request for Quotations', 'Request for Bids', 'Consultant Qualification  Selection', 'Individual Consultant Selection']
['Ghana', 'World', 'Burkina Faso', 'Nigeria']
['Post', 'Prior']
['Post', 'Prior']
True
False
__CODE_ERROR__: invalid syntax (<string>, line 0) in respones  for answer Wrong Code, #### Columns are: ['Unique ID', 'Parent', 'Name', 'Tier 1', 'Tier 2', 'Tier 3', 'Tier 4', 'Unnamed: 7'], ### question is: Is any entry in the third tier a (direct or otherwise) descendant of 150?
True
False
True
False
True
Attractions
Attractions
Automotive
Automotive
150
Commercial Trucks
150
20
12
3
6
2
2
1
True
20
['150', '2', '1']
[12, 8]
[0, 0]
[20, 18, 6, 0]
['Attractions', 'Automotive', 'Music']
['Attractions', 'Automotive']
['Auto Body Styles', 'Amusement and Theme Parks', 'Outdoor Activities', 'Bars & Restaurants']
['Attractions']
['Attractions', 'Attractions', 'Attractions', 'Attractions']
['150', '1', '2']
['150', '1', '2']
False
True
True
False
False
False
False
True
[Hacendado]
[Spain]

1

elcoco
17
3
14
5
17
20
2
['00001522']
['Seit√°n a la plancha']
['[]', '[Green Dot]']
['[]', '[Green Dot]', '[Vegetarian, Vegan]', '[No preservatives]', '[No gluten]']
['[]', '[Hacendado]']
[9, 6]
['Spain', 'United States', 'United Kingdom']
[18, 1, 1]
True
True
True
True
True
False
True
False
Switzerland
Ireland
Luxembourg
Switzerland
Hong Kong (China)
Bahamas
Barbados
101.1
46.5
20
73.21
50.8
67.2
110.91
3
[40.5, 27.1, 33.5, 19.7, 19.5]
[62.4, 62.7, 63.1, 63.2, 63.3]
[158.7, 54.6, 120.3, 111.1, 43.5]
[0, 2, 7]
[50.4, 46.2, 97.0, 65.3, 67.2]
[19.0, 19.5, 19.7, 21.0, 22.5]
99.4
['Switzerland', 'Bahamas', 'Iceland', 'Singapore', 'Barbados']
['Switzerland', 'Iceland', 'Hong Kong (China)']
['Barbados', 'Puerto Rico', 'Finland']
['Australia', 'Austria', 'Canada', 'New Zealand', 'Ireland', 'France']
['Luxembourg', 'Switzerland', 'United States', 'Australia', 'Denmark']
['Hong Kong (China)', 'Singapore', 'Puerto Rico']
True
False
True
[False, False, False, False, False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False]
False
False
True
True
4.0
1.0
4.0
4.0
3.0
4.5
3
True
337
109.25
12
8.8
3.0
0.49248670834321695
233
4
[337, 330, 328, 327, 325]
0
2
[118, 115, 112, 111, 110]
[7.9, 8.0, 8.0, 8.0, 8.0]
[4.5, 4.5, 4.0, 4.0, 4.0]
[0.92, 0.9, 0.84, 0.8, 0.78]
[118, 115, 112, 111, 110]
[337]
[8.87, 9.0]
[4, 5, 4, 4, 4]
[2, 3, 1, 3, 3]
[[4.5, 4.5, 9.65], [4.5, 3.0, 9.34], [4.0, 4.5, 9.0], [3.5, 2.5, 8.67]]
[4.5, 4.5, 4.0, 4.0, 3.5]
[4.0, 3.5, 1.5, 3.0, 3.0]
False
True
True
False
True
True
True
False
False
southeast
male
yes
southeast
male
True
0
northwest
no
42.13
0.6
4
249048.48968
18
1
4
29.354999999999997
[42.13, 40.3]
[39611.7577, 10602.385, 11090.7178]
[18, 23, 19, 23, 25]
[18, 19, 19]
['yes']
['southeast', 'southwest', 'southeast']
True
True
False
True
False
True
False
True
True
52 kg
74 kg
Squat
398
10
3
10
179
398
[]
2125
nan
287
__CODE_ERROR__: invalid syntax (<string>, line 1) in respones df['Weight Class'] = df['Weight Class'].replace('Open', '1000000'); df[df['Weight Class'].apply(lambda x: int(x.split(' ')[0]) >= 139)].shape[0]  for answer Wrong Code, #### Columns are: ['Lifter Name', 'Age', 'Weight Class', 'Lift Type', 'Amount Lifted (kg)'], ### question is: How many lifters are in the weight class that people who weight 139 pounds would enter?
[398, 396, 396]
[111, 120, 132, 133, 178]
['74 kg', '120 kg', '52 kg', '66 kg', '83 kg']
[22.0, 21.0, 20.0]
['Bench Press', 'Deadlift']
[359, 265, 264]
[]
['John Doe', 'Michael Johnson']
['74 kg', '120 kg', '52 kg']
['Laura Taylor', 'Sarah Thomas', 'Matthew Anderson', 'Jane Smith', 'Laura Taylor']
['Squat', 'Deadlift', 'Bench Press']
['Bench Press', 'Deadlift', 'Squat']
False
False
True
True
True
True
False
True
HHS Region 04
Heart disease
Male
Rural
HHS Region 04
276.4
0.4
8
3711.6
1.18
47.64761660798001
5
161.29999999999998
[115.1, 124.5, 132.2, 138.1, 139.6]
[0.4, 0.4, 0.5, 0.5, 0.5]
[115.1]
[1.0, 0.8, 0.8, 0.6]
[]
['Heart disease']
['HHS Region 01', 'HHS Region 05', 'HHS Region 03']
['Region', 'Status']
False
False
False
False
True
True
True
False
Kevin Durant
Kevin Durant
OKC
Kevin Durant
GSW
[]
Monta Ellis
169
8904
8904
20.664869721473494
82
607
0
0
154
[886, 670, 662]
[607, 604, 551]
[2280, 2133, 2036, 2023]
[169, 160, 145]
[154, 105, 91]
['Carmelo Anthony', 'Dwyane Wade', 'LaMarcus Aldridge', 'Brook Lopez', 'LeBron James']
['David Lee', 'LaMarcus Aldridge', 'Blake Griffin']
['OKC', 'MIA', 'NYK', 'GSW', 'POR']
['GSW', 'OKC', 'MIA', 'POR', 'NYK']
['Monta Ellis', 'Kemba Walker']
['Brook Lopez', 'Kevin Durant', 'LaMarcus Aldridge']
['Russell Westbrook', 'Deron Williams', 'LeBron James', 'Stephen Curry']
False
True
False
True
False
True
True
20
True
1
19
156
1
23.1
55
1.4
22.925
20
8
18
40
2.383247452752784
[180, 165, 165]
[17, 16, 18, 19]
[]
[]
[0, 1]
[0]
[165]
[]
__CODE_ERROR__: invalid syntax (<string>, line 1) in respones df_sorted = df[df['Heredity'] > 0].sort_values(by='Age')  for answer Wrong Code, #### Columns are: ['Age', 'Pregnancy No', 'Weight', 'Height', 'BMI', 'Heredity', 'Prediction'], ### question is: List the unique ages of the youngest five women who have a diabetes risk associated with their family. If there are less than five answer with all the unique ages that match the criteria.
False
False
True
False
False
False
False
False
True
0
6
December
7
December
7
11
Monday
26.4
0.9
0.0
3
48.95
643.1
4.621855972613053
20
[26.4, 24.1, 22.9]
[70.8, 77.5, 80.8, 94.3, 97.1]
[5, 4, 6]
[21, 27, 27, 29]
[7.2, 6.7, 6.7, 5.4, 5.4]
[0.0, 0.0, 0.0]
[26.2, 27.4, 27.9]
None
['Wednesday', 'Monday', 'Tuesday']
['August', 'November']
['Sunday', 'Tuesday', 'Monday']
['December', 'August', 'February']
['Tuesday', 'Monday', 'Sunday', 'Saturday']
['August', 'February', 'December']
False
False
False
False
False
True
True
True
__CODE_ERROR__: 'str' object has no attribute 'value_counts' in respones df.loc[df['store_id'].value_counts().idxmax()]['store_location'].value_counts().idxmax()  for answer Wrong Code, #### Columns are: ['transaction_id', 'transaction_qty', 'store_id', 'store_location', 'product_id', 'unit_price', 'product_category', 'product_type', 'product_detail', 'Revenue', 'Month', 'Month_1', 'Weekday', 'Weekday_1', 'Hour'], ### question is: What is the location of our most popular store?
Coffee
__CODE_ERROR__: could not convert string to float: '600\xa0US' in respones df.loc[df.groupby('Weekday')['Revenue'].transform(lambda x: x.astype(str).str.replace('[\$, ]', '', regex=True).astype(float).mean()).idxmin()]['Weekday'].values[0][:3]  for answer Wrong Code, #### Columns are: ['transaction_id', 'transaction_qty', 'store_id', 'store_location', 'product_id', 'unit_price', 'product_category', 'product_type', 'product_detail', 'Revenue', 'Month', 'Month_1', 'Weekday', 'Weekday_1', 'Hour'], ### question is: Which are the first three letters of day of the week which has worst performance in terms of revenue?
Hot chocolate
Jan
8
Lower Manhattan
Coffee
2
16
__CODE_ERROR__: invalid syntax (<string>, line 1) in respones df['Revenue'] = df['Revenue'].str.replace(r'[, ]|\xa0US\$', '', regex=True).astype('float'); df['Revenue'].sum()  for answer Wrong Code, #### Columns are: ['transaction_id', 'transaction_qty', 'store_id', 'store_location', 'product_id', 'unit_price', 'product_category', 'product_type', 'product_detail', 'Revenue', 'Month', 'Month_1', 'Weekday', 'Weekday_1', 'Hour'], ### question is: What is the total revenue provided by all the transactions in the dataset?
True
3.2049999999999996
20
2
900.0
0
[2, 2, 2]
[5, 8]
[2.0, 2.0, 2.0, 2.5]
[900.0, 900.0, 700.0]
[7]
['Lower Manhattan', "Hell's Kitchen"]
[]
['Hot chocolate', 'Brewed Chai tea', 'Gourmet brewed coffee']
['Jan']
['Sun']
[5, 8]
__CODE_ERROR__: unexpected indent (<string>, line 2) in respones df.loc[df['Revenue'].str.replace('\xa0US$','').str.replace(',','.', regex=False).astype(float).nlargest(2).index, 'product_type'].tolist()       for answer Wrong Code, #### Columns are: ['transaction_id', 'transaction_qty', 'store_id', 'store_location', 'product_id', 'unit_price', 'product_category', 'product_type', 'product_detail', 'Revenue', 'Month', 'Month_1', 'Weekday', 'Weekday_1', 'Hour'], ### question is: What are the 2 (non-unique) product types associated with the highest 2 revenues of a single given purchase? Answer with a list with 2 elements.
Sustainably Grown Organic Lg
True
True
False
True
False
False
False
True
Sapiens A Brief History Of Humankind
 Novel
0
7
Benjamin Graham
80
BPB Publications (India)
6.0
Islamic Books
1
8780
3
10.65
9.0
[498]
2
3
19
[498, 640, 80, 512, 492]
[498, 640, 80, 512, 492]
[30.0, 39.0, 27.0, 13.0]
[492]
[4.0, 6.0, 21.0, 38.0, 18.0]
[11.0, 23.0, 27.0, 10.0, 13.0]
[498]
2.0
['History and Tradition', ' Business, Investment and Economics', 'Islamic Books', 'Islamic Books', 'Computer Science & Engineering']
[]
['Madinah Arabic Reader 1', 'How Harsh Mariwala ?Groomed? Marico', 'Train to Pakistan']
['History and Tradition', ' Business, Investment and Economics', 'Novel', 'Novel']
['Yuval Noah Harari', 'Benjamin Graham', 'Khaled Hosseini']
['Novel', 'Novel', 'Novel', 'Self-help and meditation', 'Self-help and meditation']
['1st Edition', 'Edition', 'Edition', '1st Published']
